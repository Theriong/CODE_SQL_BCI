
/*CARGA DE DATA DE LOS ULTIMOS 6 MESES DESDE LA TABLA GESFOR.DVN_STOCK_CCT
 CON LOS MOVIMIENTOS DE SALDOS POR DIA POR CLIENTE*/

DROP TABLE FTORREN.DVN_STOCK_CCT;

CREATE TABLE FTORREN.DVN_STOCK_CCT (
ID_DVN_STOCK_CCT INT IDENTITY,
RUT INT,
CIC VARCHAR(20),
EJE VARCHAR(50),
OFI VARCHAR(10),
BCA VARCHAR(5),
FCH_ACT DATE,
SDO_DISP_ACT DECIMAL(30,6)
)
CREATE UNIQUE
INDEX IDX_DVN_STOCK_CCT
ON  FTORREN.DVN_STOCK_CCT (ID_DVN_STOCK_CCT,RUT,EJE,OFI,BCA)
WITH ALLOW_DUP_ROW;

CREATE INDEX IDX_1_DSC ON  ftorren.DVN_STOCK_CCT(FCH_ACT,RUT);

INSERT INTO FTORREN.DVN_STOCK_CCT(
RUT,
CIC,
EJE,
OFI,
BCA,
FCH_ACT,
SDO_DISP_ACT
)
SELECT
RUT,
CIC,
EJE,
OFI,
BCA,
CONVERT(DATE,CONVERT(CHAR,ANO_MES_DIA)) AS FCH_ACT,
SDO_DISP AS SDO_DISP_ACT
FROM GESFOR.DVN_STOCK_CCT
WHERE ANO_MES_DIA BETWEEN 20160101 AND 20160630

INSERT INTO FTORREN.DVN_STOCK_CCT(
RUT,
CIC,
EJE,
OFI,
BCA,
FCH_ACT,
SDO_DISP_ACT
)
SELECT
RUT,
CIC,
EJE,
OFI,
BCA,
CONVERT(DATE,CONVERT(CHAR,ANO_MES_DIA)) AS FCH_ACT,
SDO_DISP AS SDO_DISP_ACT
FROM GESFOR.DVN_STOCK_CCT
WHERE ANO_MES_DIA BETWEEN 20170101 AND 20170630

/* CRUZE DE LOS ULTIMOS 6 MESES CON LA TABLA DE FECHAS PARA OBTENER EL SIGUIENTE DIA HABIL
 * Y TRASLAPE DE LOS DATOS CON LA MISMA TABLA PARA OBTENER EL SALDO DEL DIA SIGUIENTE */


DROP TABLE FTORREN.DSC_COMPARATOR;

CREATE TABLE FTORREN.DSC_COMPARATOR (
ID_DSC_COMPARATOR INT IDENTITY,
RUT INT,
CIC VARCHAR(20),
EJE VARCHAR(50),
OFI VARCHAR(10),
BCA VARCHAR(5),
FCH_ACT DATE,
SDO_DISP_ACT DECIMAL(30,6),
FCH_SIG DATE,
SDO_DISP_SIG DECIMAL(30,6)
);
/*CREATE UNIQUE
INDEX IDX_DSC_COMPARATOR
ON  FTORREN.DSC_COMPARATOR (ID_DSC_COMPARATOR,FCH_ACT,RUT,EJE)
WITH ALLOW_DUP_ROW;*/

CREATE INDEX IDX_1_DSC_C ON  ftorren.DSC_COMPARATOR(FCH_ACT,RUT);

INSERT INTO FTORREN.DSC_COMPARATOR(
RUT,
CIC,
EJE,
OFI,
BCA,
FCH_ACT,
SDO_DISP_ACT,
FCH_SIG,
SDO_DISP_SIG
)
SELECT
A.RUT,
A.CIC,
A.EJE,
A.OFI,
A.BCA,
A.FCH_ACT,
A.SDO_DISP_ACT,
CASE
WHEN B.CAL_IND_DIA = 'F' THEN B.FCH_NXT_H 
ELSE DATEADD(DAY,1,A.FCH_ACT) 
END AS FCH_SIG,
C.SDO_DISP_ACT AS SDO_DISP_SIG 
FROM FTORREN.DVN_STOCK_CCT A
LEFT JOIN FTORREN.DATE_TABLE B
ON DATEADD(DAY,1,A.FCH_ACT) = B.FCH_ACT
LEFT JOIN FTORREN.DVN_STOCK_CCT C
ON FCH_SIG = C.FCH_ACT AND A.RUT = C.RUT



/*CARGA SOLO DE LOS CLIENTES QUE TUVIERON MOVIMIENTOS DE SALDO ENTRE DIAS*/

DROP TABLE FTORREN.CLI_ACTIVOS;

CREATE TABLE FTORREN.CLI_ACTIVOS (
ID_CLI_ACTIVOS INT IDENTITY,
RUT INT,
CIC VARCHAR(20),
EJE VARCHAR(50),
OFI VARCHAR(10),
BCA VARCHAR(5),
FCH_ACT DATE,
SDO_DISP_ACT DECIMAL(30,6),
FCH_SIG DATE,
SDO_DISP_SIG DECIMAL(30,6)
);
CREATE UNIQUE
INDEX IDX_CLI_ACTIVOS
ON  FTORREN.CLI_ACTIVOS (ID_CLI_ACTIVOS,RUT,EJE,OFI,BCA,FCH_ACT)
WITH ALLOW_DUP_ROW;

INSERT INTO FTORREN.CLI_ACTIVOS(
RUT,
CIC,
EJE,
OFI,
BCA,
FCH_ACT,
SDO_DISP_ACT,
FCH_SIG,
SDO_DISP_SIG
)
SELECT
RUT,
CIC,
EJE,
OFI,
BCA,
FCH_ACT,
SDO_DISP_ACT,
FCH_SIG,
SDO_DISP_SIG
FROM FTORREN.DSC_COMPARATOR
WHERE SDO_DISP_SIG IS NOT NULL
AND SDO_DISP_SIG < SDO_DISP_ACT
AND RUT > 0



DROP TABLE FTORREN.RESUMEN_MOVIMIENTO;

CREATE TABLE FTORREN.RESUMEN_MOVIMIENTO (
ID_RESUMEN_MOVIMIENTO INT IDENTITY,
ANO_MES INT,
RUT INT,
IND_MOVIMIENTO VARCHAR(10)
)
CREATE UNIQUE
INDEX IDX_RESUMEN_MOVIMIENTO
ON  FTORREN.RESUMEN_MOVIMIENTO (ID_RESUMEN_MOVIMIENTO,RUT)
WITH ALLOW_DUP_ROW;

CREATE INDEX IDX_AM_RUT_RM ON  FTORREN.RESUMEN_MOVIMIENTO (ANO_MES,RUT);

INSERT INTO FTORREN.RESUMEN_MOVIMIENTO(
ANO_MES,
RUT,
IND_MOVIMIENTO
)
SELECT
CASE
WHEN YEAR(FCH_ACT) = 2017 THEN 201706
ELSE 201606
END AS ANO_MES,
RUT,
'X' AS IND_MOVIMIENTO
FROM FTORREN.CLI_ACTIVOS
GROUP BY ANO_MES,RUT




