DROP TABLE ftorren.DATE_TABLE;

CREATE TABLE ftorren.DATE_TABLE (
ID_DATE_TABLE INT identity,
CAL_ANO INT,
CAL_MES INT,
CAL_DIA INT,
CAL_TIP_DIA VARCHAR(5),
CAL_IND_DIA VARCHAR(5),
CAL_CTD_DIA INT,
FCH_INT INT,
TRM_ANT DATE,
MES_ANT DATE,
DIA_ANT DATE,
FCH_ACT DATE,
FCH_NXT_H DATE
)
CREATE UNIQUE
INDEX IDX_DATE_TABLE
ON  ftorren.DATE_TABLE (ID_DATE_TABLE,FCH_INT)
WITH ALLOW_DUP_ROW;

INSERT INTO ftorren.DATE_TABLE(
ID_FACT_TABLE,
CAL_ANO,
CAL_MES,
CAL_DIA,
CAL_TIP_DIA,
CAL_IND_DIA,
CAL_CTD_DIA,
FCH_INT,
TRM_ANT,
MES_ANT,
DIA_ANT,
FCH_ACT,
FCH_NXT_H
)
SELECT
A.CAL_ANO,
A.CAL_MES,
A.CAL_DIA,
A.CAL_TIP_DIA,
A.CAL_IND_DIA,
A.CAL_CTD_DIA,
(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA) FCH_INT,
CASE
WHEN QUARTER(CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA))))-1 = 0 
THEN CONVERT(DATE,CONVERT(VARCHAR(8),((A.CAL_ANO-1)*10000)+(12*100)+(31)))
WHEN QUARTER(CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA))))-1 = 1 
THEN CONVERT(DATE,CONVERT(VARCHAR(8),((A.CAL_ANO)*10000)+(3*100)+(31)))--20170331
WHEN QUARTER(CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA))))-1 = 2 
THEN CONVERT(DATE,CONVERT(VARCHAR(8),((A.CAL_ANO)*10000)+(6*100)+(30)))--20170630
WHEN QUARTER(CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA))))-1 = 3 
THEN CONVERT(DATE,CONVERT(VARCHAR(8),((A.CAL_ANO)*10000)+(9*100)+(30)))--20170930
WHEN QUARTER(CONVERT(DATE,CONVERT(VARCHAR(8),(CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA))))-1 = 4 
THEN CONVERT(DATE,CONVERT(VARCHAR(8),((A.CAL_ANO)*10000)+(12*100)+(31)))--20171231
END AS TRM_ANT,
DATEADD(DAY,-A.CAL_DIA,CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA)))) AS MES_ANT,
CASE
WHEN A.CAL_IND_DIA = 'F' AND A.CAL_CTD_DIA = 0
THEN DATEADD(DAY,-2,CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA)))) 
WHEN A.CAL_IND_DIA = 'F' AND A.CAL_CTD_DIA <> 0
THEN DATEADD(DAY,-(A.CAL_CTD_DIA),CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA)))) 
ELSE CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA)))
END AS DIA_ANT,
CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA))) AS FCH_ACT,
CASE
WHEN A.CAL_IND_DIA = 'F'
THEN DATEADD(DAY,A.CAL_CTD_DIA+1,CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA))))
ELSE CONVERT(DATE,CONVERT(VARCHAR(8),(A.CAL_ANO*10000)+(A.CAL_MES*100)+(A.CAL_DIA)))
END AS FCH_NXT_H
FROM HISTORICA.cal_dia A
WHERE A.CAL_ANO > YEAR(NOW())-2


SELECT * FROM ftorren.DATE_TABLE

/*DATEPART(MONTH,DATEADD(QUARTER,-1,CONVERT(DATE,CONVERT(VARCHAR(8),(CAL_ANO*10000)+(CAL_MES*100)+(CAL_DIA))))) AS MES_PRV,
DATEPART(MONTH,CONVERT(DATE,CONVERT(VARCHAR(8),(CAL_ANO*10000)+(CAL_MES*100)+(CAL_DIA)))) AS MES_ACT,
DATEPART(MONTH,DATEADD(QUARTER,+1,CONVERT(DATE,CONVERT(VARCHAR(8),(CAL_ANO*10000)+(CAL_MES*100)+(CAL_DIA))))) AS MES_NXT,
DATEPART(QUARTER,DATEADD(QUARTER,-1,CONVERT(DATE,CONVERT(VARCHAR(8),(CAL_ANO*10000)+(CAL_MES*100)+(CAL_DIA))))) AS TRIM_PRV,
DATEPART(QUARTER,CONVERT(DATE,CONVERT(VARCHAR(8),(CAL_ANO*10000)+(CAL_MES*100)+(CAL_DIA)))) AS TRIM_ACT,
DATEPART(QUARTER,DATEADD(QUARTER,+1,CONVERT(DATE,CONVERT(VARCHAR(8),(CAL_ANO*10000)+(CAL_MES*100)+(CAL_DIA))))) AS TRIM_NXT*/